<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Manage Registrations - School Events</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <link href="/css/style.css" rel="stylesheet">
</head>
<body>
    <!-- Header -->
    <%- include('../partials/header') %>

    <!-- Main Content -->
    <main class="container my-5">
        <div class="row">
            <div class="col-12">
                <div class="card shadow-lg border-0" data-aos="fade-up">
                    <div class="card-header bg-primary text-white">
                        <h3 class="mb-0">
                            <i class="fas fa-users me-2"></i>
                            Manage Event Registrations
                        </h3>
                    </div>
                    <div class="card-body p-4">
                        <!-- Filters -->
                        <div class="row mb-4">
                            <div class="col-md-3">
                                <label for="eventFilter" class="form-label">Filter by Event</label>
                                <select class="form-select" id="eventFilter">
                                    <option value="">All Events</option>
                                    <% if (typeof events !== 'undefined' && events) { %>
                                        <% events.forEach(event => { %>
                                            <option value="<%= event.id %>"><%= event.title %></option>
                                        <% }); %>
                                    <% } %>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="statusFilter" class="form-label">Payment Status</label>
                                <select class="form-select" id="statusFilter">
                                    <option value="">All Statuses</option>
                                    <option value="pending">Pending</option>
                                    <option value="paid">Paid</option>
                                    <option value="cancelled">Cancelled</option>
                                </select>
                            </div>
                            <div class="col-md-3">
                                <label for="searchInput" class="form-label">Search Student/Parent</label>
                                <input type="text" class="form-control" id="searchInput" placeholder="Search...">
                            </div>
                            <div class="col-md-3 d-flex align-items-end">
                                <button class="btn btn-outline-primary" onclick="refreshData()">
                                    <i class="fas fa-refresh me-2"></i>Refresh
                                </button>
                            </div>
                        </div>

                        <!-- Registrations Table -->
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Event</th>
                                        <th>Student</th>
                                        <th>Parent</th>
                                        <th>Registration Date</th>
                                        <th>Payment Status</th>
                                        <th>Amount</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="registrationsTable">
                                    <!-- Data will be loaded dynamically -->
                                </tbody>
                            </table>
                        </div>

                        <!-- Loading and No Data States -->
                        <div id="loadingState" class="text-center py-4" style="display: none;">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-2">Loading registrations...</p>
                        </div>

                        <div id="noDataState" class="text-center py-4" style="display: none;">
                            <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                            <h5>No registrations found</h5>
                            <p class="text-muted">Try adjusting your filters or check back later.</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Payment Status Modal -->
    <div class="modal fade" id="paymentModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Update Payment Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <form id="paymentForm">
                    <div class="modal-body">
                        <input type="hidden" id="registrationId" name="registrationId">
                        
                        <div class="mb-3">
                            <label class="form-label">Event</label>
                            <input type="text" class="form-control" id="modalEvent" readonly>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Student</label>
                            <input type="text" class="form-control" id="modalStudent" readonly>
                        </div>
                        
                        <div class="mb-3">
                            <label class="form-label">Parent</label>
                            <input type="text" class="form-control" id="modalParent" readonly>
                        </div>
                        
                        <div class="mb-3">
                            <label for="paymentStatus" class="form-label">Payment Status *</label>
                            <select class="form-select" id="paymentStatus" name="paymentStatus" required>
                                <option value="pending">Pending</option>
                                <option value="paid">Paid</option>
                                <option value="cancelled">Cancelled</option>
                            </select>
                        </div>
                        
                        <div class="mb-3">
                            <label for="paymentAmount" class="form-label">Payment Amount ($)</label>
                            <input type="number" class="form-control" id="paymentAmount" name="paymentAmount" min="0" step="0.01">
                        </div>
                        
                        <div class="mb-3">
                            <label for="paymentNotes" class="form-label">Notes</label>
                            <textarea class="form-control" id="paymentNotes" name="paymentNotes" rows="3" placeholder="Add any notes about the payment..."></textarea>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>Update Status
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Footer -->
    <%- include('../partials/footer') %>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="/js/main.js"></script>
    <script>
        // Initialize AOS
        AOS.init();

        // Load registrations on page load
        document.addEventListener('DOMContentLoaded', function() {
            loadRegistrations();
        });

        // Filter event listeners
        document.getElementById('eventFilter').addEventListener('change', loadRegistrations);
        document.getElementById('statusFilter').addEventListener('change', loadRegistrations);
        document.getElementById('searchInput').addEventListener('input', debounce(loadRegistrations, 300));

        // Load registrations data
        function loadRegistrations() {
            const eventFilter = document.getElementById('eventFilter').value;
            const statusFilter = document.getElementById('statusFilter').value;
            const searchQuery = document.getElementById('searchInput').value;

            showLoading();

            fetch(`/admin/registrations/data?event=${eventFilter}&status=${statusFilter}&search=${searchQuery}`)
                .then(response => response.json())
                .then(data => {
                    hideLoading();
                    if (data.success) {
                        displayRegistrations(data.registrations);
                    } else {
                        showError('Failed to load registrations');
                    }
                })
                .catch(error => {
                    hideLoading();
                    console.error('Error:', error);
                    showError('Failed to load registrations');
                });
        }

        // Display registrations in table
        function displayRegistrations(registrations) {
            const tbody = document.getElementById('registrationsTable');
            
            if (registrations.length === 0) {
                showNoData();
                return;
            }

            hideNoData();
            
            tbody.innerHTML = registrations.map(reg => `
                <tr>
                    <td>
                        <strong>${reg.event_title}</strong><br>
                        <small class="text-muted">${reg.event_type}</small>
                    </td>
                    <td>
                        <strong>${reg.student_name}</strong><br>
                        <small class="text-muted">Grade ${reg.student_grade}</small>
                    </td>
                    <td class="parent-name">
                        ${reg.parent_name}<br>
                        <small class="text-muted">${reg.parent_email}</small>
                    </td>
                    <td>
                        ${new Date(reg.registration_date).toLocaleDateString()}<br>
                        <small class="text-muted">${new Date(reg.registration_date).toLocaleTimeString()}</small>
                    </td>
                    <td>
                        <span class="badge bg-${getStatusColor(reg.payment_status)}">
                            ${reg.payment_status.charAt(0).toUpperCase() + reg.payment_status.slice(1)}
                        </span>
                    </td>
                    <td>
                        TSh ${reg.payment_amount || reg.event_fee || '0.00'}
                    </td>
                    <td>
                        <button class="btn btn-sm btn-outline-primary" onclick="openPaymentModal(${reg.id}, '${reg.event_title}', '${reg.student_name}', '${reg.parent_name}', '${reg.payment_status}', ${reg.payment_amount || reg.event_fee || 0})">
                            <i class="fas fa-edit me-1"></i>Update
                        </button>
                    </td>
                </tr>
            `).join('');
        }

        // Get status color for badges
        function getStatusColor(status) {
            switch(status) {
                case 'paid': return 'success';
                case 'pending': return 'warning';
                case 'cancelled': return 'danger';
                default: return 'secondary';
            }
        }

        // Open payment status modal
        function openPaymentModal(registrationId, eventTitle, studentName, parentName, currentStatus, currentAmount) {
            document.getElementById('registrationId').value = registrationId;
            document.getElementById('modalEvent').value = eventTitle;
            document.getElementById('modalStudent').value = studentName;
            document.getElementById('modalParent').value = parentName;
            document.getElementById('paymentStatus').value = currentStatus;
            document.getElementById('paymentAmount').value = currentAmount;
            
            const modal = new bootstrap.Modal(document.getElementById('paymentModal'));
            modal.show();
        }

        // Handle payment form submission
        document.getElementById('paymentForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const registrationId = formData.get('registrationId');
            
            fetch(`/admin/registrations/${registrationId}/payment`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    paymentStatus: formData.get('paymentStatus'),
                    paymentAmount: formData.get('paymentAmount'),
                    paymentNotes: formData.get('paymentNotes')
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Close modal
                    bootstrap.Modal.getInstance(document.getElementById('paymentModal')).hide();
                    
                    // Show success message
                    showSuccess(data.message);
                    
                    // Reload data
                    loadRegistrations();
                } else {
                    showError(data.error || 'Failed to update payment status');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showError('Failed to update payment status');
            });
        });

        // Utility functions
        function showLoading() {
            document.getElementById('loadingState').style.display = 'block';
            document.getElementById('registrationsTable').style.display = 'none';
            document.getElementById('noDataState').style.display = 'none';
        }

        function hideLoading() {
            document.getElementById('loadingState').style.display = 'none';
            document.getElementById('registrationsTable').style.display = 'table-row-group';
        }

        function showNoData() {
            document.getElementById('noDataState').style.display = 'block';
            document.getElementById('registrationsTable').style.display = 'none';
        }

        function hideNoData() {
            document.getElementById('noDataState').style.display = 'none';
            document.getElementById('registrationsTable').style.display = 'table-row-group';
        }

        function refreshData() {
            loadRegistrations();
        }

        function debounce(func, wait) {
            let timeout;
            return function executedFunction(...args) {
                const later = () => {
                    clearTimeout(timeout);
                    func(...args);
                };
                clearTimeout(timeout);
                timeout = setTimeout(later, wait);
            };
        }

        function showSuccess(message) {
            // You can implement a toast notification here
            alert('Success: ' + message);
        }

        function showError(message) {
            // You can implement a toast notification here
            alert('Error: ' + message);
        }
    </script>
</body>
</html> 